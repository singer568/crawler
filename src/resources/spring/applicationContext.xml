<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2010 The myBatis Team

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
     default-lazy-init="false">
    <context:component-scan base-package="org.javacoo.cowswing" />
     <!-- 允许 autowire -->
    <context:annotation-config />
    <!--开启注解事务 -->
    <tx:annotation-driven />
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>resources/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true"/>
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}"/>
		<property name="initialPoolSize" value="${cpool.minPoolSize}"/>
		<property name="minPoolSize" value="${cpool.minPoolSize}"/>
		<property name="maxPoolSize" value="${cpool.maxPoolSize}"/>
		<property name="maxIdleTime" value="${cpool.maxIdleTime}"/>
		<property name="acquireIncrement" value="${cpool.acquireIncrement}"/>
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"/>
	</bean>
     
     
    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <aop:config>
        <aop:pointcut id="txServiceMethods" expression="execution(* org.javacoo.cowswing.base.service..*(..))" />
        <aop:pointcut id="txPluginServiceMethods" expression="execution(* org.javacoo.cowswing.plugin.service..*(..))" />
        
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txServiceMethods" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPluginServiceMethods" />
    </aop:config>
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
    	<tx:attributes>
    	 	<tx:method name="insert*" propagation="REQUIRED" />
    		<tx:method name="update*" propagation="REQUIRED" />
    		<tx:method name="delete*" propagation="REQUIRED" />
    		<tx:method name="*" propagation="REQUIRED" read-only="true" />
    	</tx:attributes>
    </tx:advice>
    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->    
    <!--  <context:component-scan base-package="org.javacoo.crawler.service" /> -->
    <!--  <context:component-scan base-package="org.javacoo.crawler.plugin.service" />-->

   

    <!-- 定义SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation">
        	<value>resources/mybatis/mybatis-config.xml</value>
        </property>
    </bean>
    <!-- MyBatis持久服务类 -->
    <bean id="myBatisPersistence" class="org.javacoo.persistence.mybatis.MyBatisPersistenceImpl">
	  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- 持久服务类 -->
	<bean id="persistService" class="org.javacoo.persistence.PersistServiceDelegate">
		<property name="myBatisPersistence" ref="myBatisPersistence" />
	</bean>

</beans>
