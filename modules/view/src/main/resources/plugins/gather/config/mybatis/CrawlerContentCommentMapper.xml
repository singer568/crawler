<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CrawlerContentCommentMapper">

  <cache />
  <resultMap id="crawlerContentCommentResultMap" type="CrawlerContentComment">
     <result property="commentId" column="comment_id" />
     <result property="contentId" column="content_id" />
     <result property="ruleId" column="rule_id" />
     <result property="content" column="content" />
   </resultMap>
  
  <select id="getCrawlerContentCommentList" parameterType="CrawlerContentCommentCriteria" resultMap="crawlerContentCommentResultMap">
    SELECT   
          c.comment_id,
     	  c.content_id,
          c.rule_id,
          c.content
    FROM 
          crawler_content_comment c
    WHERE 1 = 1
        <if test="ruleId != null and ruleId != '' ">  
	        AND c.rule_id = #{ruleId}  
	    </if>
	    <if test="contentId != null and contentId != '' ">  
	        AND c.content_id = #{contentId}  
	    </if>
  	ORDER BY 
          c.comment_id DESC
   </select>
   <select id="getCrawlerContentCommentList_COUNT" parameterType="CrawlerContentCommentCriteria" resultType="java.lang.Integer">
    SELECT count(*)
    FROM 
          crawler_content_comment c
    WHERE 1 = 1
        <if test="ruleId != null and ruleId != '' ">  
	        AND c.rule_id = #{ruleId}  
	    </if>
	    <if test="contentId != null and contentId != '' ">  
	        AND c.content_id = #{contentId}  
	    </if>
  	ORDER BY 
          c.comment_id DESC
   </select>
   
   <select id="getCrawlerContentCommentById" parameterType="java.util.Map" resultMap="crawlerContentCommentResultMap">
    SELECT   
          c.comment_id,
     	  c.content_id,
          c.rule_id,
          c.content
    FROM 
          crawler_content_comment c
  	WHERE
          c.comment_id = #{commentId}
   </select>
   
  <insert id="insertCrawlerContentComment" parameterType="CrawlerContentComment"  useGeneratedKeys="true"  keyProperty="commentId">
    INSERT INTO crawler_content_comment
      (content_id,rule_id,content)
    VALUES
      (#{contentId},#{ruleId},#{content})
  </insert>
  
  <update id="updateCrawlerContentComment" parameterType="CrawlerContentComment">
    UPDATE crawler_content_comment 
            <trim prefix="SET" suffixOverrides=",">  
           		<if test="ruleId != null and ruleId != '' ">  
		            rule_id = #{ruleId}, 
		        </if> 
		        <if test="contentId != null and contentId != '' ">  
		            content_id = #{contentId}, 
		        </if> 
		        <if test="content != null and content != '' ">  
		            content = #{content}
		        </if> 
		   </trim>
    WHERE comment_id = #{commentId}
  </update>
  <delete id="deleteCrawlerContentCommentByRuleId" parameterType="CrawlerContentComment">
     DELETE FROM crawler_content_comment WHERE rule_id IN
      <foreach  collection="ruleIdList" item="ruleIdList" separator="," open="(" close=")">
    	#{ruleIdList}
      </foreach>
  </delete>
  <delete id="deleteCrawlerContentCommentByContentId" parameterType="CrawlerContentComment">
     DELETE FROM crawler_content_comment WHERE content_id IN
     <foreach  collection="contentIdList" item="contentIdList" separator="," open="(" close=")">
    	#{contentIdList}
     </foreach>
  </delete>
  <delete id="deleteCrawlerContentCommentById" parameterType="CrawlerContentComment">
     DELETE FROM crawler_content_comment WHERE comment_id IN
     <foreach  collection="commentIdList" item="commentIdList" separator="," open="(" close=")">
    	#{commentIdList}
     </foreach>
  </delete>
  
</mapper>